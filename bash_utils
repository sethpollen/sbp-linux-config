#!/bin/sh

function SET_UP_BASH_PROMPT {
  ##################################################
  # Fancy PWD display function
  ##################################################
  # The home directory (HOME) is replaced with a ~
  # The last pwdmaxlen characters of the PWD are displayed
  # Leading partial directory names are striped off
  # /home/me/stuff          -> ~/stuff               if USER=me
  # /usr/share/big_dir_name -> ../share/big_dir_name if pwdmaxlen=20
  ##################################################
  # How many characters of the $PWD should be kept
  local pwdmaxlen=50
  # Indicate that there has been dir truncation
  local trunc_symbol=".."
  local dir=${PWD##*/}
  local pwdmaxlen=$(( ( pwdmaxlen < ${#dir} ) ? ${#dir} : pwdmaxlen ))
  NEW_PWD=${PWD/#$HOME/\~}
  local pwdoffset=$(( ${#NEW_PWD} - pwdmaxlen ))
  if [ ${pwdoffset} -gt "0" ]
  then
    NEW_PWD=${NEW_PWD:$pwdoffset:$pwdmaxlen}
    NEW_PWD=${trunc_symbol}/${NEW_PWD#*/}
  fi

  # Set up command prompt line.
  local PROMPT_COLOR="1;36m"
  local PROMPT2_COLOR="1;33m"
  local COMMAND_COLOR="0m"
  export PS1="\e[$PROMPT_COLOR\\D{%m/%d %H:%M} \\h \${NEW_PWD}\n\e[$PROMPT2_COLOR\$ \e[$COMMAND_COLOR"
}
PROMPT_COMMAND=SET_UP_BASH_PROMPT
 
# Custom functions.
function fd {
  if [ $# -ge 1 ]; then
    if [ -f "$1" ]; then
      vim "$1"
    fi
    if [ -d "$1" ]; then
      cd "$1"
      ls --color=always
    fi
  else
    ls --color=always
  fi
}

alias fd..="fd .."
alias ..="fd .."
alias .="pwd"
alias gist="git status"
alias gibt="git branch"
alias dolf="dolphin . > /dev/null 2>&1 &"

function kat {
  # Invoke kate in a separate process, and redirect its output streams to /dev/null
  kate $* > /dev/null 2>&1 &
}

function pwn {
  pwd
  ls --color=always
}

function doo {
  echo $@
  $@
}
