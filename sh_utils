export EDITOR=vim

# zsh invokes the precmd function before each prompt.
function precmd {
  ##################################################
  # Fancy PWD display function
  ##################################################
  # The home directory (HOME) is replaced with a ~
  # The last pwdmaxlen characters of the PWD are displayed
  # Leading partial directory names are striped off
  # /home/me/stuff          -> ~/stuff               if USER=me
  # /usr/share/big_dir_name -> ../share/big_dir_name if pwdmaxlen=20
  ##################################################
  # How many characters of the $PWD should be kept
  local pwdmaxlen=50
  # Indicate that there has been dir truncation
  local trunc_symbol=".."
  local dir=${PWD##*/}
  local pwdmaxlen=$(( ( pwdmaxlen < ${#dir} ) ? ${#dir} : pwdmaxlen ))
  NEW_PWD=${PWD/#$HOME/\~}
  local pwdoffset=$(( ${#NEW_PWD} - pwdmaxlen ))
  if [ ${pwdoffset} -gt "0" ]
  then
    if [ $ZSH_NAME ]; then
      # zsh uses a different syntax for grabbing substrings.
      NEW_PWD=$NEW_PWD[$pwdoffset,9999]
    else
      NEW_PWD=${NEW_PWD:$pwdoffset:$pwdmaxlen}
    fi
    NEW_PWD=${trunc_symbol}/${NEW_PWD#*/}
  fi
  
  local PROMPT_DOLLAR_COLOR="1;33m" # Yellow.
  local COMMAND_COLOR="0m"

  # Set up command prompt line.
  if [ $ZSH_NAME ]; then
    local PROMPT_COLOR="1;36m" # Cyan for zsh.
    PS1="\e[$PROMPT_COLOR%D{%m/%d %H:%M} %m ${NEW_PWD}\n\e[${PROMPT_DOLLAR_COLOR}z> \e[$COMMAND_COLOR"
  else # It must be bash.
    local PROMPT_COLOR="1;31m" # Red for bash.
    PS1="\e[$PROMPT_COLOR\D{%m/%d %H:%M} \h \${NEW_PWD}\n\e[${PROMPT_DOLLAR_COLOR}b> \e[$COMMAND_COLOR"
  fi
  
  # TODO may need to put export on the next line for bash
  # For some reason, we need this line to get zsh to recognize the backslash-e escapes.
  PS1=`echo $PS1`
}

# Bash doesn't use precmd; it instead uses the PROMPT_COMMAND variable.
PROMPT_COMMAND=precmd
 
# Custom functions.
function fd {
  if [ $# -ge 1 ]; then
    if [ -f "$1" ]; then
      vim "$1"
    fi
    if [ -d "$1" ]; then
      cd "$1"
      ls --color=always
    fi
  else
    ls --color=always
  fi
}

function kat {
  # Invoke kate in a separate process, and redirect its output
  # streams to /dev/null
  kate $* &> /dev/null &
}

# Opens dolphin (K file browser).
function dolf {
  dolphin . &> /dev/null &
}

function pwn {
  pwd
  ls --color=always
}

function doo {
  echo $@
  $@
}

# Opens a file using the current desktop's generic opener.
function ope {
  for ARG in $*
  do
    kde-open $ARG &> /dev/null || gnome-open $ARG &> /dev/null
  done
}

# Shortcut for ssh'ing into my cs.wisc.edu machine.
export CS_USERNAME=pollen
export CS_MACHINE=calpurnia.cs.wisc.edu
function sshcs {
  ssh -X $CS_USERNAME@$CS_MACHINE
}

alias fd..="fd .."
alias ..="fd .."
alias .="pwd"
alias gist="git status"
alias gibt="git branch"

# Turn on coloring for some commands.
alias ls='ls --color=auto'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# Some more ls aliases.
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
